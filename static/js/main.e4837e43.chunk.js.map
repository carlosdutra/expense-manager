{"version":3,"sources":["components/TopMenu/index.js","components/TopMenu/TopMenu.js","ui/TextCurrencyField/TextCurrencyField.js","ui/TextCurrencyField/index.js","components/AddExpenseForm/index.js","components/AddExpenseForm/AddExpenseForm.js","components/ExpenseItem/index.js","components/ExpenseItem/ExpenseItem.js","components/ExpensesBarView/index.js","components/ExpensesBarView/ExpensesBarView.js","components/ExpensesList/index.js","components/ExpensesList/ExpensesList.js","App.js","index.js"],"names":["TopMenu","Pane","className","background","marginBottom","Heading","color","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","TextCurrencyField","maskOptions","inputProps","currencyMask","createNumberMask","mask","defaultProps","inputMode","AddExpenseForm","props","useState","isShown","setIsShown","expenseTitle","undefined","expenseValue","expenseDate","expense","setExpense","Dialog","title","onCloseComplete","hasFooter","onSubmit","event","preventDefault","toaster","success","combinedData","id","uuidv4","value","currency","date","Date","replace","toISOString","onSubmitExpense","TextInputField","label","description","placeholder","onChange","prevState","target","required","type","max","format","Button","intent","marginRight","onClick","iconAfter","PlusIcon","ExpenseItem","elevation","padding","Badge","Strong","size","IconButton","icon","EditIcon","appearance","alert","TrashIcon","ExpensesBarView","months","Array","from","length","e","i","toLocaleDateString","month","data","fill","map","m","splice","console","log","dataBar","labels","datasets","backgroundColor","borderWidth","categoryPercentage","barPercentage","options","scales","yAxes","ticks","beginAtZero","ExpensesList","existingEntries","JSON","parse","localStorage","getItem","expenses","setExpenses","CUR","symbol","groupExpensesByMonthOfCurrentYear","_","groupBy","filter","isThisYear","result","expenseTotalByMonthOfCurrentYear","Object","keys","k","r","parseFloat","reduce","acc","cur","monthsIndexes","n","parseInt","Paragraph","a","b","isThisMonth","startOfWeek","endOfWeek","isThisWeek","isToday","push","setItem","stringify","sort","toDateString","InfoSignIcon","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4837e43.chunk.js","sourcesContent":["import TopMenu from './TopMenu'\n\nexport default TopMenu","import { Avatar, Heading, Pane } from \"evergreen-ui\";\n\nconst TopMenu = () => {\n  return (\n    <Pane className=\"header px-4 py-2\" background=\"#5f9578\" marginBottom={32}>\n      <Pane className=\"container mx-auto flex items-center justify-between\">\n        <Pane>\n          <Heading color=\"white\">ExpTracker</Heading>\n        </Pane>\n        <Pane>\n          {/* <Avatar\n            src=\"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png\"\n            name=\"Icon Placeholder\"\n            size={40}\n          ></Avatar> */}\n        </Pane>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default TopMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MaskedInput from \"react-text-mask\";\nimport createNumberMask from \"text-mask-addons/dist/createNumberMask\";\n\nconst defaultMaskOptions = {\n  prefix: \"CA$\",\n  suffix: \"\",\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: \",\",\n  allowDecimal: true,\n  decimalSymbol: \".\",\n  decimalLimit: 2, // how many digits allowed after the decimal\n  integerLimit: 7, // limit length of integer numbers\n  allowNegative: false,\n  allowLeadingZeroes: false,\n};\n\nconst TextCurrencyField = ({ maskOptions, ...inputProps }) => {\n  const currencyMask = createNumberMask({\n    ...defaultMaskOptions,\n    ...maskOptions,\n  });\n\n  return <MaskedInput mask={currencyMask} {...inputProps} />;\n};\n\nTextCurrencyField.defaultProps = {\n  inputMode: \"numeric\",\n  maskOptions: {},\n};\n\nTextCurrencyField.propTypes = {\n  inputmode: PropTypes.string,\n  maskOptions: PropTypes.shape({\n    prefix: PropTypes.string,\n    suffix: PropTypes.string,\n    includeThousandsSeparator: PropTypes.bool,\n    thousandsSeparatorSymbol: PropTypes.string,\n    allowDecimal: PropTypes.bool,\n    decimalSymbol: PropTypes.string,\n    decimalLimit: PropTypes.string,\n    requireDecimal: PropTypes.bool,\n    allowNegative: PropTypes.bool,\n    allowLeadingZeroes: PropTypes.bool,\n    integerLimit: PropTypes.number,\n  }),\n};\n\nexport default TextCurrencyField;\n","import TextCurrencyField from './TextCurrencyField'\n\nexport default TextCurrencyField\n","import AddExpenseForm from './AddExpenseForm'\n\nexport default AddExpenseForm","import React, { useState } from \"react\";\nimport {\n  Pane,\n  Dialog,\n  TextInputField,\n  Button,\n  toaster,\n  PlusIcon,\n} from \"evergreen-ui\";\nimport TextCurrencyField from \"ui/TextCurrencyField\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { format } from 'date-fns';\nimport \"./AddExpenseForm.css\";\nimport currency from 'currency.js'\n\nconst AddExpenseForm = (props) => {\n  // State\n  const [isShown, setIsShown] = useState(false);\n\n  const [expense, setExpense] = useState({\n    expenseTitle: undefined,\n    expenseValue: undefined,\n    expenseDate: undefined,\n  });\n\n  // Handlers\n  const handleTitleChange = (event) => {\n    setExpense((prevState) => {\n      return { ...prevState, expenseTitle: event.target.value };\n    });\n  };\n\n  const handleValueChange = (event) => {\n    setExpense((prevState) => {\n      return { ...prevState, expenseValue: event.target.value };\n    });\n  };\n\n  const handleDateChange = (event) => {\n    setExpense((prevState) => {\n      return { ...prevState, expenseDate: event.target.value };\n    });\n  };\n\n  // Submit Handler\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Close Dialog\n    setIsShown(false);\n\n    // Notify user\n    toaster.success(\"Your expense was added sucessfully.\");\n\n    // Send item to ExpenseList compontent\n    const combinedData = {\n      id: uuidv4(),\n      title: expense.expenseTitle,\n      value: currency(expense.expenseValue),\n      // date: new Date(expense.expenseDate + \" 00:00:00\").toDateString(),\n      date: new Date(expense.expenseDate.replace(/-/g, '\\/')).toISOString(),\n    };\n\n    props.onSubmitExpense(combinedData);\n\n    // Clear form\n    setExpense({\n      expenseTitle: undefined,\n      expenseValue: undefined,\n      expenseDate: undefined,\n    });\n  };\n\n  return (\n    <Pane className=\"my-4\">\n      <Dialog\n        isShown={isShown}\n        title=\"Add a new expense\"\n        onCloseComplete={() => setIsShown(false)}\n        hasFooter={false}\n      >\n        <Pane>\n          <form className=\"form__wrap p-3\" onSubmit={handleSubmit}>\n            <Pane className=\"form__controls\">\n              <Pane className=\"form__control\">\n                <TextInputField\n                  label=\"What is the name of the expense?\"\n                  description=\"Please provide a short title for your expense\"\n                  placeholder=\"E.g. car insurance, phone bill...\"\n                  value={expense.expenseTitle}\n                  onChange={handleTitleChange}\n                  required\n                  // validationMessage=\"This field is required\"\n                />\n              </Pane>\n              <Pane className=\"form__control\" marginBottom={24}>\n                <Pane marginBottom={8}>\n                  <label className=\"datepicker__label\">\n                    How much was your expense? *\n                  </label>\n                  <p className=\"datepicker__description\">\n                    Please provide the value of the expense\n                  </p>\n                </Pane>\n                <TextCurrencyField\n                  className=\"datepicker__input\"\n                  placeholder=\"CA$0.00\"\n                  value={expense.expenseValue}\n                  onChange={handleValueChange}\n                  required\n                  // validationMessage=\"This field is required\"\n                />\n              </Pane>\n              <Pane className=\"form__control\" marginBottom={24}>\n                <Pane marginBottom={8}>\n                  <label className=\"datepicker__label\">\n                    When did it happen? *\n                  </label>\n                  <p className=\"datepicker__description\">\n                    Please provide a date for your expense\n                  </p>\n                </Pane>\n                <input\n                  type=\"date\"\n                  className=\"datepicker__input\"\n                  max={format(new Date(), 'yyyy-MM-dd')}\n                  value={expense.expenseDate}\n                  onChange={handleDateChange}\n                  required\n                />\n              </Pane>\n            </Pane>\n\n            <Pane className=\"form__submit\">\n              <Button type=\"submit\" intent=\"success\" marginRight={8}>\n                Save\n              </Button>\n              <Button intent=\"danger\" onClick={() => setIsShown(false)}>\n                Cancel\n              </Button>\n            </Pane>\n          </form>\n        </Pane>\n      </Dialog>\n\n      <Button iconAfter={PlusIcon} onClick={() => setIsShown(true)}>\n        Add a new expense\n      </Button>\n    </Pane>\n  );\n};\n\nexport default AddExpenseForm;\n","import ExpenseItem from './ExpenseItem';\n\nexport default ExpenseItem","import {\n  Heading,\n  Pane,\n  EditIcon,\n  TrashIcon,\n  Strong,\n  Badge,\n  IconButton,\n} from \"evergreen-ui\";\n\nconst ExpenseItem = ({ title, value, date }) => {\n  return (\n    <Pane className=\"my-2\" elevation={1} padding={20}>\n      <Pane>\n        <Badge color=\"green\">CATEGORY</Badge>\n      </Pane>\n\n      <Pane className=\"flex justify-between items-center\">\n        <Pane className=\"flex items-center w-1/2 gap-x-6\">\n          <Strong size={300}>{date}</Strong>\n          <Strong>{value}</Strong>\n          <Heading size={700}>{title}</Heading>\n        </Pane>\n\n        <Pane className=\"w-1/2 text-right\">\n          <IconButton\n            icon={EditIcon}\n            appearance=\"minimal\"\n            onClick={() => alert(\"Edit item\")}\n          />\n          <IconButton\n            icon={TrashIcon}\n            appearance=\"minimal\"\n            intent=\"danger\"\n            onClick={() => alert(\"Delete item\")}\n          />\n        </Pane>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default ExpenseItem;\n","import ExpensesBarView from './ExpensesBarView'\n\nexport default ExpensesBarView","import { Bar } from \"react-chartjs-2\";\n\nconst ExpensesBarView = (props) => {\n  const months = Array.from({ length: 12 }, (e, i) => {\n    return new Date(null, i + 1, null).toLocaleDateString(\"en\", {\n      month: \"short\",\n    });\n  });\n\n  let data = new Array(12).fill(0);\n  props.months.map((m, i) => data.splice(m - 1, 1, props.data[i]));\n\n  console.log(data);\n\n  const dataBar = {\n    labels: months,\n    datasets: [\n      {\n        label: \"Monthly total\",\n        data: data,\n        backgroundColor: Array(12).fill(\"#5f9578\"),\n        borderWidth: 0,\n        categoryPercentage: 1,\n        barPercentage: 0.5,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return <Bar data={dataBar} options={options} />;\n};\n\nexport default ExpensesBarView;\n","import ExpensesList from './ExpensesList'\n\nexport default ExpensesList","import React, { useState } from \"react\";\nimport AddExpenseForm from \"components/AddExpenseForm\";\nimport ExpenseItem from \"components/ExpenseItem\";\nimport ExpensesBarView from \"components/ExpensesBarView\";\nimport { Pane, Heading, Paragraph, InfoSignIcon, Strong } from \"evergreen-ui\";\nimport {\n  format,\n  compareAsc,\n  isThisYear,\n  isThisMonth,\n  isThisWeek,\n  isToday,\n  startOfWeek,\n  endOfWeek,\n} from \"date-fns\";\nimport currency from \"currency.js\";\nimport _ from \"lodash\";\n\nconst ExpensesList = () => {\n  // Get Local Storage\n  let existingEntries = JSON.parse(localStorage.getItem(\"allEntries\")) || [];\n\n  // State\n  const [expenses, setExpenses] = useState(existingEntries);\n\n  // Currency\n  const CUR = (value) => currency(value, { symbol: \"CA$\" });\n\n  // Save expense item to state\n  const saveExpenses = (expense) => {\n    setExpenses([...expenses, expense]);\n    existingEntries.push(expense);\n    localStorage.setItem(\"allEntries\", JSON.stringify(existingEntries));\n  };\n\n  // Group Expenses by periods\n  // let groupExpensesByYear = _.groupBy(expenses, (result) => format(new Date(result.date), 'yyyy'))\n  // let groupExpensesByMonthSortByDate = _.sortBy(groupExpensesByMonth, (result) => format(new Date(result.date), 'yyyy_M'));\n  // let groupExpensesByWeek = _.groupBy(expenses, (result) => format(new Date(result.date), 'yyyy_M_w'))\n\n  // Feed Overview Monthly Chart of Current Year\n  let groupExpensesByMonthOfCurrentYear = _.groupBy(\n    expenses.filter((e) => isThisYear(new Date(e.date))),\n    (result) => format(new Date(result.date), \"M\")\n  );\n  const expenseTotalByMonthOfCurrentYear = Object.keys(groupExpensesByMonthOfCurrentYear).map((k) => {\n    return groupExpensesByMonthOfCurrentYear[k]\n      .map((r) => parseFloat(r.value))\n      .reduce((acc, cur) => acc + cur, 0);\n  });\n  const monthsIndexes = Object.keys(groupExpensesByMonthOfCurrentYear).map(n => parseInt(n));\n\n  console.log(expenseTotalByMonthOfCurrentYear, monthsIndexes);\n\n  // Sum Expenses by current year, month, week and day\n  const getYearTotal = () =>\n    CUR(\n      expenses\n        .filter((e) => isThisYear(new Date(e.date)))\n        .reduce((a, b) => a + (currency(b[\"value\"]).value || 0), 0)\n    ).format();\n\n  const getMonthTotal = () =>\n    CUR(\n      expenses\n        .filter((e) => isThisMonth(new Date(e.date)))\n        .reduce((a, b) => a + (currency(b[\"value\"]).value || 0), 0)\n    ).format();\n\n  const getWeekTotal = () =>\n    CUR(\n      expenses\n        .filter((e) => isThisWeek(new Date(e.date)))\n        .reduce((a, b) => a + (currency(b[\"value\"]).value || 0), 0)\n    ).format();\n\n  const getTodaysTotal = () =>\n    CUR(\n      expenses\n        .filter((e) => isToday(new Date(e.date)))\n        .reduce((a, b) => a + (currency(b[\"value\"]).value || 0), 0)\n    ).format();\n\n  return (\n    <Pane className=\"main px-4\">\n      <Pane className=\"container mx-auto\">\n        <Pane className=\"flex mb-6 gap-6\">\n          <Pane className=\"w-auto\">\n\n            <Pane className=\"mb-3\">\n              <Strong>Total Expenses</Strong>\n              <Paragraph size={300}>\n                This is how much you have spent this year\n              </Paragraph>\n              <Heading size={900}>{getYearTotal()}</Heading>\n            </Pane>\n\n            <Pane className=\"mb-3\">\n              <Strong>{format(new Date(), \"MMM yyyy\")}</Strong>\n              <Paragraph size={300}>Your total for this month</Paragraph>\n              <Heading size={800}>{getMonthTotal()}</Heading>\n            </Pane>\n\n            <Pane className=\"mb-3\">\n              <Strong>\n                {format(startOfWeek(new Date()), \"MMM do\")} -{\" \"}\n                {format(endOfWeek(new Date()), \"MMM do\")}\n              </Strong>\n              <Paragraph size={300}>Your total for this week</Paragraph>\n              <Heading size={800}>{getWeekTotal()}</Heading>\n            </Pane>\n\n            <Pane className=\"mb-3\">\n              <Strong>{format(new Date(), \"EEEE, MMM do yyyy\")}</Strong>\n              <Paragraph size={300}>Your total today</Paragraph>\n              <Heading size={800}>{getTodaysTotal()}</Heading>\n            </Pane>\n          </Pane>\n\n          <Pane className=\"w-full\">\n            <ExpensesBarView data={expenseTotalByMonthOfCurrentYear} months={monthsIndexes} />\n          </Pane>\n\n        </Pane>\n\n        <AddExpenseForm onSubmitExpense={saveExpenses} />\n\n        <Heading size={600}>Your expenses ({existingEntries.length})</Heading>\n        {existingEntries.length > 0 ? (\n          existingEntries\n            .sort((a, b) => new Date(b.date) - new Date(a.date))\n            .map((expense, i) => (\n              <ExpenseItem\n                key={i}\n                title={expense.title}\n                value={CUR(expense.value).format()}\n                date={new Date(expense.date).toDateString()}\n                // date={format(new Date(expense.date), 'MMM do yyyy')}\n              />\n            ))\n        ) : (\n          <Pane className=\"p-10 my-4 text-center\" background=\"#f8f8f8\">\n            <Paragraph color=\"#C8C8C8\">\n              <InfoSignIcon size={12} /> You don't have any expenses yet.\n            </Paragraph>\n          </Pane>\n        )}\n      </Pane>\n    </Pane>\n  );\n};\nexport default ExpensesList;\n","import \"./App.css\";\nimport TopMenu from \"components/TopMenu\";\nimport ExpensesOverview from \"components/ExpensesOverview\";\nimport ExpensesList from \"components/ExpensesList\";\nimport SideNav from \"components/SideNav\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App grid-container\">\n        <TopMenu />\n        {/* <SideNav /> */}\n        <ExpensesList />\n        {/* <Switch>\n          <Route path=\"/\" exact component={ExpensesList} />\n          <Route path=\"/reports\" component={ExpensesOverview} />\n        </Switch> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './tailwind.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}